// <auto-generated />
using System;
using E_Ticaret.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Ticaret.Model.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201115151312_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("E_Ticaret.Model.Entities.BillingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("IdentityRegistrationNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("MobilePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TaxNo")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("TaxOffice")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("BillingAddress");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayShowcaseContent")
                        .HasColumnType("int");

                    b.Property<string>("DistibutorCode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Distributor")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ImageFilename")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<string>("MetaKeyWords")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ShowcaseContent")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            DisplayShowcaseContent = 1,
                            Name = "Ercan Mandıra",
                            Slug = "Apple",
                            SortOrder = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("Locked")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberCartId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ShopTokenId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.HasIndex("ModifiedMemberCartId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("ShopTokenId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.CartItemAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartItemId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartItemId");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("CartItemAttribute");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayShowcaseContent")
                        .HasColumnType("int");

                    b.Property<string>("Distributor")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("DistributorCode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("HasChildren")
                        .HasColumnType("int");

                    b.Property<string>("ImageFilename")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShowcaseContent")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int>("ShowcaseContentDisplayType")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("ParentId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedMemberId = 1,
                            DisplayShowcaseContent = 1,
                            HasChildren = 0,
                            ImageFilename = "\\uploads\\11263-meyve_sebze-43b02f.jpg",
                            Name = "Meyve,Sebze",
                            Percent = 1m,
                            ShowcaseContent = "1",
                            ShowcaseContentDisplayType = 1,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedMemberId = 1,
                            DisplayShowcaseContent = 1,
                            HasChildren = 0,
                            ImageFilename = "\\uploads\\35c329ba_c5d0_46a8_96e1_809e17f9bce1.jpeg",
                            Name = "Et,Tavuk,Balık",
                            Percent = 1m,
                            ShowcaseContent = "1",
                            ShowcaseContentDisplayType = 1,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedMemberId = 1,
                            DisplayShowcaseContent = 1,
                            HasChildren = 0,
                            ImageFilename = "\\uploads\\33b521ee_6f2c_4f0f_b592_e8a0b5424479.jpeg",
                            Name = "Süt,Kahvaltılık",
                            Percent = 1m,
                            ShowcaseContent = "1",
                            ShowcaseContentDisplayType = 1,
                            SortOrder = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedMemberId = 1,
                            Name = "Türkiye",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedMemberId = 1,
                            Name = "Almanya",
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbr")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("IsPrimary")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Abbr = "TL",
                            BuyingPrice = 1m,
                            IsPrimary = 1,
                            Label = "Türk Lirası",
                            SellingPrice = 1m,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Abbr = "USD",
                            BuyingPrice = 10m,
                            IsPrimary = 0,
                            Label = "Dolar",
                            SellingPrice = 9m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Predefined")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("RegionId");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CreatedMemberId = 1,
                            Name = "Ankara",
                            Predefined = 0,
                            RegionId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            CreatedMemberId = 1,
                            Name = "İstanbul",
                            Predefined = 0,
                            RegionId = 3,
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.MailList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastMailSentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MailListGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("MailListGroupId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("MailList");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.MailListGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("MailListGroup");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int>("AllowedToCampaigns")
                        .HasColumnType("int");

                    b.Property<string>("Birthdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommercialName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceInfo")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal>("GainedPointAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastIp")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastLoginDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastMailSentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberGroupId")
                        .HasColumnType("int");

                    b.Property<int>("MemberStatus")
                        .HasColumnType("int");

                    b.Property<string>("MobilePhoneNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("OtherLocation")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal>("ReferredMemberGainedPointAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ReferredMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<decimal>("SpentPonitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TaxOffice")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("TcId")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MemberGroupId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("ReferredMemberId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowedToCampaigns = 0,
                            DeviceType = "Desktop",
                            Email = "can@hotmail.com",
                            Firstname = "Hüseyin",
                            GainedPointAmount = 0m,
                            Gender = 0,
                            MemberStatus = 2,
                            Password = "123",
                            ReferredMemberGainedPointAmount = 0m,
                            SpentPonitAmount = 0m,
                            Status = 1,
                            Surname = "Ercan",
                            Title = "Admin"
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.MemberGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowedPaymentGateWays")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PriceIndex")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("MemberGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowedPaymentGateWays = "1",
                            Name = "Kullanıcılar",
                            PriceIndex = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AdditionalServiceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<decimal>("CouponDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyRates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CustomerFirstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("CustomerSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("DeviceType")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int>("ExtraInstallment")
                        .HasColumnType("int");

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GeneralAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GiftNote")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int>("HasUserNote")
                        .HasColumnType("int");

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<decimal>("InstallmentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoicePrintCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MailListId")
                        .HasColumnType("int");

                    b.Property<string>("MemberGroupName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("PaymentGatewayCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentGatewayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentProviderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PaymentProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<decimal>("PromotionDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Referrer")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<decimal>("ShippingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingCompanyName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("ShippingPaymentType")
                        .HasColumnType("int");

                    b.Property<string>("ShippingProviderCode")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ShippingProviderName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ShippingTrackingCode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("SumOfGainedPoints")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("UseGiftPackage")
                        .HasColumnType("int");

                    b.Property<int>("UsePromotion")
                        .HasColumnType("int");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("MailListId");

                    b.HasIndex("MemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VarKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("VarValue")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IsProductPromotioned")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderItemSubscriptionId")
                        .HasColumnType("int");

                    b.Property<string>("ProductBarcode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal>("ProductDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductMoneyOrderDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ProductStockTypeLabel")
                        .HasColumnType("int");

                    b.Property<int>("ProductTax")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderItemSubscriptionId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.OrderItemCustomization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartItemAttributeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCustomizationFieldId")
                        .HasColumnType("int");

                    b.Property<string>("ProductCustomizationFieldName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCustomizationFieldType")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ProductCustomizationFieldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int>("ProductCustomizationGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ProductCustomizationGroupName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ProductCustomizationGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("OrderItemCustomization");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.OrderItemSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("OrderItemSubscription");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Pimage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("DirectoryName")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Revision")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("ProductId");

                    b.ToTable("Pimage");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            CreatedMemberId = 1,
                            DirectoryName = "uploads",
                            Extension = ".jpeg",
                            Filename = "\\uploads\\a07a9f9b_7cfb_4bb8_92b1_2ab0e53d8686.jpeg",
                            ProductId = 1,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedMemberId = 1,
                            DirectoryName = "uploads",
                            Extension = ".jpeg",
                            Filename = "\\uploads\\b52d0061_2924_42db_ba94_5b0704a66106.jpeg",
                            ProductId = 29,
                            SortOrder = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedMemberId = 1,
                            DirectoryName = "uploads",
                            Extension = ".jpeg",
                            Filename = "\\uploads\\2d37217f_c8ca_47d5_8262_ea81d3c5528c.jpeg",
                            ProductId = 30,
                            SortOrder = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("ProductId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("BrandSortOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CampaignedSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("CustomShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomShippingDisabled")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<int>("DiscountedSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Distributor")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("FeaturedSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Gift")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("HomeSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("InstallmentTreshold")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("IsGifted")
                        .HasColumnType("int");

                    b.Property<string>("MarketPriceDetail")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<decimal>("MoneyOrderDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("NewSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("PageTitle")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("PopularSortOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SearchKeyWords")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ShortDetails")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("StockAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockTypeLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tax")
                        .HasColumnType("int");

                    b.Property<int>("TaxIncluded")
                        .HasColumnType("int");

                    b.Property<int>("Variant")
                        .HasColumnType("int");

                    b.Property<decimal>("VolumetricWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("ParentId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = "Barcode",
                            BrandId = 3,
                            BrandSortOrder = 1,
                            BuyingPrice = 4.99m,
                            CampaignedSortOrder = 1,
                            CreatedMemberId = 1,
                            CurrencyId = 2,
                            CustomShippingCost = 15m,
                            CustomShippingDisabled = 1,
                            Discount = 0m,
                            DiscountType = 0,
                            DiscountedSortOrder = 1,
                            FeaturedSortOrder = 1,
                            FullName = "Starkin Elma",
                            Gift = "0",
                            HomeSortOrder = 1,
                            IsGifted = 0,
                            MoneyOrderDiscount = 0m,
                            Name = "Elma",
                            NewSortOrder = 1,
                            PopularSortOrder = 1,
                            Price1 = 6m,
                            ShortDetails = "1",
                            Sku = "1234",
                            Status = 1,
                            StockAmount = 2500m,
                            Tax = 2,
                            TaxIncluded = 0,
                            Variant = 0,
                            VolumetricWeight = 1m,
                            Warranty = 1
                        },
                        new
                        {
                            Id = 29,
                            Barcode = "Barcode",
                            BrandId = 3,
                            BrandSortOrder = 1,
                            BuyingPrice = 4.99m,
                            CampaignedSortOrder = 1,
                            CreatedMemberId = 1,
                            CurrencyId = 2,
                            CustomShippingCost = 15m,
                            CustomShippingDisabled = 1,
                            Discount = 0m,
                            DiscountType = 0,
                            DiscountedSortOrder = 1,
                            FeaturedSortOrder = 1,
                            FullName = "Cherry Domates",
                            Gift = "0",
                            HomeSortOrder = 1,
                            IsGifted = 0,
                            MoneyOrderDiscount = 0m,
                            Name = "Domates",
                            NewSortOrder = 1,
                            PopularSortOrder = 1,
                            Price1 = 4.50m,
                            ShortDetails = "1",
                            Sku = "1234",
                            Status = 1,
                            StockAmount = 2500m,
                            Tax = 2,
                            TaxIncluded = 0,
                            Variant = 0,
                            VolumetricWeight = 1m,
                            Warranty = 1
                        },
                        new
                        {
                            Id = 30,
                            Barcode = "Barcode",
                            BrandId = 3,
                            BrandSortOrder = 1,
                            BuyingPrice = 4.99m,
                            CampaignedSortOrder = 1,
                            CreatedMemberId = 1,
                            CurrencyId = 2,
                            CustomShippingCost = 15m,
                            CustomShippingDisabled = 1,
                            Discount = 0m,
                            DiscountType = 0,
                            DiscountedSortOrder = 1,
                            FeaturedSortOrder = 1,
                            FullName = "Çikita Muz",
                            Gift = "0",
                            HomeSortOrder = 1,
                            IsGifted = 0,
                            MoneyOrderDiscount = 0m,
                            Name = "Muz",
                            NewSortOrder = 1,
                            PopularSortOrder = 1,
                            Price1 = 14m,
                            ShortDetails = "1",
                            Sku = "1234",
                            Status = 1,
                            StockAmount = 2500m,
                            Tax = 2,
                            TaxIncluded = 0,
                            Variant = 0,
                            VolumetricWeight = 1m,
                            Warranty = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.ProductToCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductToCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedMemberId = 1,
                            ProductId = 1,
                            SortOrder = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.ProductToCountDown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpireDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductToCountDown");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("Promotion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedMemberId = 1,
                            Label = "Hepsi20",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedMemberId = 1,
                            Label = "Indirim15",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedMemberId = 1,
                            Label = "İndirimYOK",
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("Region");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedMemberId = 1,
                            Name = "İç Anadolu",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedMemberId = 1,
                            Name = "Marmara",
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.ShippingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(65535);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("MobilePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubLocation")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ModifiedMemberId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("ShippingAddress");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.ShopToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("CreatedMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedComputer")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedIp")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("ModifiedMemberId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedMemberId");

                    b.HasIndex("ModifiedMemberId");

                    b.ToTable("ShopToken");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CreatedMemberId = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.BillingAddress", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Country", "Country")
                        .WithMany("BillingAddresses")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberBillingAddress")
                        .WithMany("CreatedMemberBillingAddresses")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Location", "Location")
                        .WithMany("BillingAddresses")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberBillingAddress")
                        .WithMany("ModifiedMemberBillingAddresses")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Order", "Order")
                        .WithOne("BillingAddress")
                        .HasForeignKey("E_Ticaret.Model.Entities.BillingAddress", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Brand", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberBrand")
                        .WithMany("CreatedMemberBrands")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberBrand")
                        .WithMany("ModifiedMemberBrands")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Cart", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "Member")
                        .WithOne("Cart")
                        .HasForeignKey("E_Ticaret.Model.Entities.Cart", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberCart")
                        .WithMany("ModifiedMemberCarts")
                        .HasForeignKey("ModifiedMemberCartId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberCart")
                        .WithMany("CreatedMemberCarts")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Promotion", "ChosenPromotion")
                        .WithMany("Carts")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.ShopToken", "ChoosenToken")
                        .WithMany("Carts")
                        .HasForeignKey("ShopTokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.CartItem", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Category", "Category")
                        .WithMany("CartItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberCartItem")
                        .WithMany("CreatedMemberCartItems")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberCartItem")
                        .WithMany("ModifiedMemberCartItems")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Product", "Product")
                        .WithOne("CartItem")
                        .HasForeignKey("E_Ticaret.Model.Entities.CartItem", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.CartItemAttribute", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.CartItem", "CartItem")
                        .WithMany("Attributes")
                        .HasForeignKey("CartItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberCartItemAttribute")
                        .WithMany("CreatedMemberCartItemAttributes")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberCartItemAttribute")
                        .WithMany("ModifiedMemberCartItemAttributes")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Category", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberCategory")
                        .WithMany("CreatedMemberCategories")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberCategory")
                        .WithMany("ModifiedMemberCategories")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Category", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Country", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberCountry")
                        .WithMany("CreatedMemberCountries")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberCountry")
                        .WithMany("ModifiedMemberCountries")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Currency", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberCurrency")
                        .WithMany("CreatedMemberCurrencies")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Currency", null)
                        .WithMany("Currencies")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberCurrency")
                        .WithMany("ModifiedMemberCurrencies")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Location", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberLocation")
                        .WithMany("CreatedMemberLocations")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberLocation")
                        .WithMany("ModifiedMemberLocations")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Region", "Region")
                        .WithMany("Locations")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.MailList", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberMailList")
                        .WithMany("CreatedMemberMailLists")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.MailListGroup", "MailListGroup")
                        .WithMany("MailLists")
                        .HasForeignKey("MailListGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberMailList")
                        .WithMany("ModifiedMemberMailLists")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.MailListGroup", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberMailListGroup")
                        .WithMany("CreatedMemberMailListGroups")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberMailListGroup")
                        .WithMany("ModifiedMemberMailListGroups")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Member", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Country", "Country")
                        .WithMany("Members")
                        .HasForeignKey("CountryId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMember")
                        .WithMany("CreatedMembers")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Location", "Location")
                        .WithMany("Members")
                        .HasForeignKey("LocationId");

                    b.HasOne("E_Ticaret.Model.Entities.MemberGroup", "MemberGroup")
                        .WithMany("Members")
                        .HasForeignKey("MemberGroupId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMember")
                        .WithMany("ModifiedMembers")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ReferredMember")
                        .WithMany("ReferredMembers")
                        .HasForeignKey("ReferredMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.MemberGroup", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberGroup")
                        .WithMany("CreatedMemberGroups")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberGroup")
                        .WithMany("ModifiedMemberGroups")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Order", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberOrder")
                        .WithMany("CreatedMemberOrders")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Currency", "Currency")
                        .WithMany("Orders")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.MailList", "MailList")
                        .WithMany("Orders")
                        .HasForeignKey("MailListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "Member")
                        .WithMany("Orders")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberOrder")
                        .WithMany("ModifiedMemberOrders")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberOrderDetail")
                        .WithMany("CreatedMemberOrderDetails")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberOrderDetail")
                        .WithMany("ModifiedMemberOrderDetails")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.OrderItem", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberOrderItem")
                        .WithMany("CreatedMemberOrderItems")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberOrderItem")
                        .WithMany("ModifiedMemberOrderItems")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.OrderItemSubscription", "OrderItemSubscription")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderItemSubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.OrderItemCustomization", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberOrderItemCustomization")
                        .WithMany("CreatedMemberOrderItemCustomizations")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberOrderItemCustomization")
                        .WithMany("ModifiedMemberOrderItemCustomizations")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.OrderItem", "OrderItem")
                        .WithMany("OrderItemCustomizations")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.OrderItemSubscription", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberOrderItemSubscription")
                        .WithMany("CreatedMemberOrderItemSubscriptions")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberOrderItemSubscription")
                        .WithMany("ModifiedMemberOrderItemSubscriptions")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Pimage", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberPimage")
                        .WithMany("CreatedMemberPimages")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberPimage")
                        .WithMany("ModifiedMemberPimages")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Product", "Product")
                        .WithMany("Pimages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Price", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberPrice")
                        .WithMany("CreatedMemberPrices")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberPrice")
                        .WithMany("ModifiedMemberPrices")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Product", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberProduct")
                        .WithMany("CreatedMemberProducts")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Currency", "Currency")
                        .WithMany("Products")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberProduct")
                        .WithMany("ModifiedMemberProducts")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Product", "Parent")
                        .WithMany("Products")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.ProductToCategory", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Category", "Category")
                        .WithMany("ProductToCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberProductToCategory")
                        .WithMany("CreatedMemberProductToCategories")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberProductToCategory")
                        .WithMany("ModifiedMemberProductToCategories")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Product", "Product")
                        .WithMany("ProductToCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.ProductToCountDown", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberProductToCountDown")
                        .WithMany("CreatedMemberProductToCountDowns")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberProductToCountDown")
                        .WithMany("ModifiedMemberProductToCountDowns")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Product", "Product")
                        .WithOne("CountDown")
                        .HasForeignKey("E_Ticaret.Model.Entities.ProductToCountDown", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Promotion", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberPromotion")
                        .WithMany("CreatedMemberPromotions")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberPromotion")
                        .WithMany("ModifiedMemberPromotions")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.Region", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberRegion")
                        .WithMany("CreatedMemberRegions")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberRegion")
                        .WithMany("ModifiedMemberRegions")
                        .HasForeignKey("ModifiedMemberId");
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.ShippingAddress", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Country", "Country")
                        .WithMany("ShippingAddresses")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberShippingAddress")
                        .WithMany("CreatedMemberShippingAddresses")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Location", "Location")
                        .WithMany("ShippingAddresses")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberShippingAddress")
                        .WithMany("ModifiedMemberShippingAddresses")
                        .HasForeignKey("ModifiedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Order", "Order")
                        .WithOne("ShippingAddress")
                        .HasForeignKey("E_Ticaret.Model.Entities.ShippingAddress", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Ticaret.Model.Entities.ShopToken", b =>
                {
                    b.HasOne("E_Ticaret.Model.Entities.Member", "CreatedMemberShopToken")
                        .WithMany("CreatedMemberShopTokens")
                        .HasForeignKey("CreatedMemberId");

                    b.HasOne("E_Ticaret.Model.Entities.Member", "ModifiedMemberShopToken")
                        .WithMany("ModifiedMemberShopTokens")
                        .HasForeignKey("ModifiedMemberId");
                });
#pragma warning restore 612, 618
        }
    }
}
